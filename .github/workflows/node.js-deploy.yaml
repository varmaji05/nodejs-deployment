name: Deploy Node.js App to AWS

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:

  terraform-provision:
    name: Terraform - Provision Infrastructure
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    outputs:
      ecr_repo_url: ${{ steps.tf-output.outputs.ecr_repo_url }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
    
      - name: Set Terraform Cloud API Token
        run: echo "credentials \"app.terraform.io\" { token = \"${TFE_TOKEN}\" }" > ~/.terraformrc
        env:
          TFE_TOKEN: ${{ secrets.TFE_TOKEN }}  
          
      - name: Terraform Init
        run: terraform init
        
      - name: Terraform Validate
        run: terraform validate
        
      - name: Terraform Plan
        run: terraform plan
        
      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Terraform Output
        id: tf-output
        run: |
          echo "ecr_repo_url=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV
          echo "ECR Repo URL: $(terraform output -raw ecr_repo_url)"

  # docker-build:
  #   name: Docker - Build and Push to ECR
  #   runs-on: ubuntu-latest
  #   needs: terraform-provision
  #   env:
  #     ECR_REPO: ${{ needs.terraform-provision.outputs.ecr_repo_url }}
        
  #   steps:
      # - name: Checkout Code
      #   uses: actions/checkout@v3

      - name: Login to Amazon ECR
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          ECR_REPO: ${{ env.ecr_repo_url }}
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REPO

      - name: Build Docker Image
        run: |
          docker build -t $ECR_REPO:latest -t $ECR_REPO:${{ github.sha }} ./app

      - name: Push Docker Image to ECR
        run: |
          docker push $ECR_REPO:latest
          docker push $ECR_REPO:${{ github.sha }}

      - name: Store image tag in SSM Parameter Store
        run: |
          aws ssm put-parameter \
            --name "/app/docker/image" \
            --value "${{ env.ECR_REPO }}:latest" \
            --type String \
            --overwrite \
            --region $AWS_REGION
